name: Create Release Tag

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  check-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for robust VERSION file change detection

      - name: Check if VERSION file was modified
        id: check-version
        env:
          BEFORE_SHA: ${{ github.event.before }}
          AFTER_SHA: ${{ github.event.after }}
        run: |
          # Check if VERSION file exists and was modified in this push
          if [ -f VERSION ]; then
            # Check all commits in this push for VERSION file changes
            # Handle edge case where before SHA might be all zeros (new branch)
            if [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
              # New branch, check if VERSION exists
              echo "modified=true" >> $GITHUB_OUTPUT
              echo "New branch with VERSION file"
            else
              # Check file changes between the two commits
              if git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" | grep -q "^VERSION$"; then
                echo "modified=true" >> $GITHUB_OUTPUT
                echo "VERSION file was modified in this push"
              else
                echo "modified=false" >> $GITHUB_OUTPUT
                echo "VERSION file was not modified in this push"
              fi
            fi
          else
            echo "modified=false" >> $GITHUB_OUTPUT
            echo "VERSION file does not exist"
          fi

      - name: Read version and create tag
        if: steps.check-version.outputs.modified == 'true'
        run: |
          # Read version from VERSION file
          VERSION=$(cat VERSION | tr -d '[:space:]')
          echo "Version from file: $VERSION"

          # Convert debian version to valid semver-compatible git tag
          # Remove epoch (1:) if present
          VERSION_NO_EPOCH="${VERSION#*:}"

          # Keep '+' for semver build metadata, replace only '~' with '.' for valid semver
          # Example: 5.12.4+dfsg-1~bpo24.04~ppa1 -> 5.12.4+dfsg-1.bpo24.04.ppa1
          TAG_VERSION=$(echo "$VERSION_NO_EPOCH" | sed 's/~/./g')

          # Create tag name with 'v' prefix
          TAG_NAME="v${TAG_VERSION}"

          echo "Creating git tag: $TAG_NAME"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists, skipping"
            exit 0
          fi

          # Create annotated tag
          git tag -a "$TAG_NAME" -m "Release OpenCPN $TAG_VERSION

          OpenCPN PPA version: $VERSION

          This release tracks the OpenCPN package from ppa:opencpn/opencpn.

          Docker images are automatically built and published to:
          ghcr.io/hatlabs/opencpn-docker:$TAG_VERSION

          ðŸ¤– This tag was automatically created by the release workflow."

          # Push tag
          git push origin "$TAG_NAME"

          echo "Successfully created and pushed tag: $TAG_NAME"
